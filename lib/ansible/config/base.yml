# Copyright (c) 2017 Ansible Project
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
ACCELERATE_CONNECT_TIMEOUT:
  default: 1.0
  description:
    - This setting controls the timeout for the socket connect call, and should be kept relatively low.
      The connection to the accelerate_port will be attempted 3 times before Ansible will fall back to ssh or paramiko
      (depending on your default connection setting) to try and start the accelerate daemon remotely.
    - Note, this value can be set to less than one second, however it is probably not a good idea to do so
      unless you’re on a very fast and reliable LAN. If you’re connecting to systems over the internet, it may be necessary to increase this timeout.
  env: [{name: ACCELERATE_CONNECT_TIMEOUT }]
  ini:
  - {key: accelerate_connect_timeout, section: accelerate}
  type: float
  deprecated:
    why: Removing accelerate as a connection method, settings not needed either.
    version: "2.5"
    alternatives: ssh and paramiko
  version_added: "1.4"
ACCELERATE_DAEMON_TIMEOUT:
  default: 30
  description:
    - This setting controls the timeout for the accelerated daemon, as measured in minutes. The default daemon timeout is 30 minutes.
    - Prior to 1.6, the timeout was hard-coded from the time of the daemon’s launch.
    - For version 1.6+, the timeout is now based on the last activity to the daemon and is configurable via this option.
  env: [{name: ACCELERATE_DAEMON_TIMEOUT}]
  ini:
  - {key: accelerate_daemon_timeout, section: accelerate}
  type: integer
  deprecated:
    why: Removing accelerate as a connection method, settings not needed either.
    version: "2.5"
    alternatives: ssh and paramiko
  version_added: "1.6"
ACCELERATE_KEYS_DIR:
  default: ~/.fireball.keys
  description: ''
  deprecated:
    why: Removing accelerate as a connection method, settings not needed either.
    version: "2.5"
    alternatives: ssh and paramiko
  env: [{name: ACCELERATE_KEYS_DIR}]
  ini:
  - {key: accelerate_keys_dir, section: accelerate}
ACCELERATE_KEYS_DIR_PERMS:
  default: '700'
  description: 'TODO: write it'
  env: [{name: ACCELERATE_KEYS_DIR_PERMS}]
  ini:
  - {key: accelerate_keys_dir_perms, section: accelerate}
  deprecated:
    why: Removing accelerate as a connection method, settings not needed either.
    version: "2.5"
    alternatives: ssh and paramiko
ACCELERATE_KEYS_FILE_PERMS:
  default: '600'
  description: 'TODO: write it'
  env: [{name: ACCELERATE_KEYS_FILE_PERMS}]
  ini:
  - {key: accelerate_keys_file_perms, section: accelerate}
  deprecated:
    why: Removing accelerate as a connection method, settings not needed either.
    version: "2.5"
    alternatives: ssh and paramiko
ACCELERATE_MULTI_KEY:
  default: False
  description: 'TODO: write it'
  env: [{name: ACCELERATE_MULTI_KEY}]
  ini:
  - {key: accelerate_multi_key, section: accelerate}
  type: boolean
  deprecated:
    why: Removing accelerate as a connection method, settings not needed either.
    version: "2.5"
    alternatives: ssh and paramiko
ACCELERATE_PORT:
  default: 5099
  description: 'TODO: write it'
  env: [{name: ACCELERATE_PORT}]
  ini:
  - {key: accelerate_port, section: accelerate}
  type: integer
  deprecated:
    why: Removing accelerate as a connection method, settings not needed either.
    version: "2.5"
    alternatives: ssh and paramiko
ACCELERATE_TIMEOUT:
  default: 30
  description: 'TODO: write it'
  env: [{name: ACCELERATE_TIMEOUT}]
  ini:
  - {key: accelerate_timeout, section: accelerate}
  type: integer
  deprecated:
    why: Removing accelerate as a connection method, settings not needed either.
    version: "2.5"
    alternatives: ssh and paramiko
ALLOW_WORLD_READABLE_TMPFILES:
  default: False
  description:
    - This makes the temporary files created on the machine to be world readable and will issue a warning instead of failing the task.
    - It is useful when becoming an unprivileged user.
  env: []
  ini:
  - {key: allow_world_readable_tmpfiles, section: defaults}
  type: boolean
  yaml: {key: defaults.allow_world_readable_tmpfiles}
  version_added: "2.1"
ANSIBLE_COW_SELECTION:
  default: default
  description: This allows you to chose a specific cowsay stencil for the banners or use 'random' to cycle through them.
  env: [{name: ANSIBLE_COW_SELECTION}]
  ini:
  - {key: cow_selection, section: defaults}
  yaml: {key: defaults.cow_selection}
ANSIBLE_COW_WHITELIST:
  default: ['bud-frogs', 'bunny', 'cheese', 'daemon', 'default', 'dragon', 'elephant-in-snake', 'elephant', 'eyes', 'hellokitty', 'kitty', 'luke-koala', 'meow', 'milk', 'moofasa', 'moose', 'ren', 'sheep', 'small', 'stegosaurus', 'stimpy', 'supermilker', 'three-eyes', 'turkey', 'turtle', 'tux', 'udder', 'vader-koala', 'vader', 'www']
  description: White list of cowsay templates that are 'safe' to use, set to empty list if you want to enable all installed templates.
  env: [{name: ANSIBLE_COW_WHITELIST}]
  ini:
  - {key: cow_whitelist, section: defaults}
  type: list
  yaml: {key: defaults.cow_whitelist}
ANSIBLE_FORCE_COLOR:
  default: False
  description: This options forces color mode even when running without a TTY
  env: [{name: ANSIBLE_FORCE_COLOR}]
  ini:
  - {key: force_color, section: defaults}
  type: boolean
  yaml: {key: defaults.force_color}
ANSIBLE_NOCOLOR:
  default: False
  description: This setting allows suppressing colorizing output, which is used to give a better indication of failure and status information.
  env: [{name: ANSIBLE_NOCOLOR}]
  ini:
  - {key: nocolor, section: defaults}
  type: boolean
  yaml: {key: defaults.nocolor}
ANSIBLE_NOCOWS:
  default: False
  description: If you have cowsay installed but want to avoid the 'cows' (why????), use this.
  env: [{name: ANSIBLE_NOCOWS}]
  ini:
  - {key: nocows, section: defaults}
  type: boolean
  yaml: {key: defaults.nocows}
ANSIBLE_PIPELINING:
  default: False
  description:
    - Pipelining, if supported by the connection plugin, reduces the number of network operations required to execute a module on the remote server,
      by executing many Ansible modules without actual file transfer.
    - This can result in a very significant performance improvement when enabled.
    - However this conflicts with privilege escalation (become). For example, when using “sudo:” operations you must first
      disable ‘requiretty’ in /etc/sudoers on all managed hosts, which is why it is disabled by default.
  env: [{name: ANSIBLE_PIPELINING}]
  ini:
  - {key: pipelining, section: connection}
  type: boolean
  yaml: {key: plugins.connection.pipelining}
ANSIBLE_SSH_ARGS:
  default: -C -o ControlMaster=auto -o ControlPersist=60s
  description:
    - If set, this will override the Ansible default ssh arguments.
    - In particular, users may wish to raise the ControlPersist time to encourage performance.  A value of 30 minutes may be appropriate.
    - Be aware that if `-o ControlPath` is set in ssh_args, the control path setting is not used.
  env: [{name: ANSIBLE_SSH_ARGS}]
  ini:
  - {key: ssh_args, section: ssh_connection}
  yaml: {key: ssh_connection.ssh_args}
ANSIBLE_SSH_CONTROL_PATH:
  # TODO: move to ssh plugin
  default: null
  description:
    - This is the location to save ssh's ControlPath sockets, it uses ssh's variable substitution.
    - Since 2.3, if null, ansible will generate a unique hash. Use `%(directory)s` to indicate where to use the control dir path setting.
    - Before 2.3 it defaulted to `control_path=%(directory)s/ansible-ssh-%%h-%%p-%%r`.
    - Be aware that this setting is ignored if `-o ControlPath` is set in ssh args.
  env: [{name: ANSIBLE_SSH_CONTROL_PATH}]
  ini:
  - {key: control_path, section: ssh_connection}
  yaml: {key: ssh_connection.control_path}
ANSIBLE_SSH_CONTROL_PATH_DIR:
  # TODO: move to ssh plugin
  default: ~/.ansible/cp
  description:
    - This sets the directory to use for ssh control path if the control path setting is null.
    - Also, provides the `%(directory)s` variable for the control path setting.
  env: [{name: ANSIBLE_SSH_CONTROL_PATH_DIR}]
  ini:
  - {key: control_path_dir, section: ssh_connection}
  yaml: {key: ssh_connection.control_path_dir}
ANSIBLE_SSH_EXECUTABLE:
  default: ssh
  description:
    - This defines the location of the ssh binary. It defaults to `ssh` which will use the first ssh binary available in $PATH.
    - This option is usually not required, it might be useful when access to system ssh is restricted,
      or when using ssh wrappers to connect to remote hosts.
  env: [{name: ANSIBLE_SSH_EXECUTABLE}]
  ini:
  - {key: ssh_executable, section: ssh_connection}
  yaml: {key: ssh_connection.ssh_executable}
  version_added: "2.2"
ANSIBLE_SSH_PIPELINING:
  default: False
  description:
    - Pipelining reduces the number of SSH operations required to execute a module on the remote server,
      by executing many Ansible modules without actual file transfer.
    - This can result in a very significant performance improvement when enabled.
    - However this conflicts with privilege escalation (become). For example, when using “sudo:” operations you must first disable ‘requiretty’ in /etc/sudoers on all managed hosts, which is why it is disabled by default.
  env: [{name: ANSIBLE_SSH_PIPELINING}]
  ini:
  - {key: pipelining, section: ssh_connection}
  type: boolean
  yaml: {key: ssh_connection.pipelining}
ANSIBLE_SSH_RETRIES:
  default: 0
  description: 'TODO: write it'
  env: [{name: ANSIBLE_SSH_RETRIES}]
  ini:
  - {key: retries, section: ssh_connection}
  type: integer
  yaml: {key: ssh_connection.retries}
ANY_ERRORS_FATAL:
  default: False
  description: Sets the default value for the any_errors_fatal keyword
  env:
    - name: ANSIBLE_ANY_ERRORS_FATAL
  ini:
    - section:  defaults
      key: any_errors_fatal
  type: boolean
  yaml: {key: errors.anyerrors_fatal}
  version_added: "2.4"
BECOME_ALLOW_SAME_USER:
  default: False
  description: This setting controls if become is skipped when remote user and become user are the same.
  env: [{name: ANSIBLE_BECOME_ALLOW_SAME_USER}]
  ini:
  - {key: become_allow_same_user, section: privilege_escalation}
  type: boolean
  yaml: {key: privilege_escalation.become_allow_same_user}
CACHE_PLUGIN:
  default: memory
  description: Chooses which cache plugin to use
  env: [{name: ANSIBLE_CACHE_PLUGIN}]
  ini:
  - {key: fact_caching, section: defaults}
  yaml: {key: defaults.fact_caching}
CACHE_PLUGIN_CONNECTION:
  default:
  description: Defines connection or path information for the cache plugin
  env: [{name: ANSIBLE_CACHE_PLUGIN_CONNECTION}]
  ini:
  - {key: fact_caching_connection, section: defaults}
  yaml: {key: defaults.fact_caching_connection}
CACHE_PLUGIN_PREFIX:
  default: ansible_facts
  description: Prefix to use for cache plugin files/tables
  env: [{name: ANSIBLE_CACHE_PLUGIN_PREFIX}]
  ini:
  - {key: fact_caching_prefix, section: defaults}
  yaml: {key: defaults.fact_caching_prefix}
CACHE_PLUGIN_TIMEOUT:
  default: 86400
  description: Expiration timeout for the cache plugin data
  env: [{name: ANSIBLE_CACHE_PLUGIN_TIMEOUT}]
  ini:
  - {key: fact_caching_timeout, section: defaults}
  type: integer
  yaml: {key: defaults.fact_caching_timeout}
COLOR_CHANGED:
  default: yellow
  description: Defines the color to use on 'Changed' status
  env: [{name: ANSIBLE_COLOR_CHANGED}]
  ini:
  - {key: changed, section: colors}
  yaml: {key: display.colors.changed}
COLOR_DEBUG:
  default: dark gray
  description: Defines the color to use when emitting debug messages
  env: [{name: ANSIBLE_COLOR_DEBUG}]
  ini:
  - {key: debug, section: colors}
  yaml: {key: colors.debug}
COLOR_DEPRECATE:
  default: purple
  description: Defines the color to use when emitting deprecation messages
  env: [{name: ANSIBLE_COLOR_DEPRECATE}]
  ini:
  - {key: deprecate, section: colors}
  yaml: {key: colors.deprecate}
COLOR_DIFF_ADD:
  default: green
  description: Defines the color to use when showing added lines in diffs
  env: [{name: ANSIBLE_COLOR_DIFF_ADD}]
  ini:
  - {key: diff_add, section: colors}
  yaml: {key: colors.diff_add}
COLOR_DIFF_LINES:
  default: cyan
  description: Defines the color to use when showing diffs
  env: [{name: ANSIBLE_COLOR_DIFF_LINES}]
  ini:
  - {key: diff_lines, section: colors}
  yaml: {key: colors.diff_lines}
COLOR_DIFF_REMOVE:
  default: red
  description: Defines the color to use when showing removed lines in diffs
  env: [{name: ANSIBLE_COLOR_DIFF_REMOVE}]
  ini:
  - {key: diff_remove, section: colors}
  yaml: {key: colors.diff_remove}
COLOR_ERROR:
  default: red
  description: Defines the color to use when emitting error messages
  env: [{name: ANSIBLE_COLOR_ERROR}]
  ini:
  - {key: error, section: colors}
  yaml: {key: colors.error}
COLOR_HIGHLIGHT:
  default: white
  description: 'TODO: write it'
  env: [{name: ANSIBLE_COLOR_HIGHLIGHT}]
  ini:
  - {key: highlight, section: colors}
  yaml: {key: colors.highlight}
COLOR_OK:
  default: green
  description: Defines the color to use when showing 'OK' status
  env: [{name: ANSIBLE_COLOR_OK}]
  ini:
  - {key: ok, section: colors}
  yaml: {key: colors.ok}
COLOR_SKIP:
  default: cyan
  description: Defines the color to use when showing 'Skipped' status
  env: [{name: ANSIBLE_COLOR_SKIP}]
  ini:
  - {key: skip, section: colors}
  yaml: {key: colors.skip}
COLOR_UNREACHABLE:
  default: bright red
  description: Defines the color to use on 'Unreachable' status
  env: [{name: ANSIBLE_COLOR_UNREACHABLE}]
  ini:
  - {key: unreachable, section: colors}
  yaml: {key: colors.unreachable}
COLOR_VERBOSE:
  default: blue
  description: Defines the color to use when emitting verbose messages
  env: [{name: ANSIBLE_COLOR_VERBOSE}]
  ini:
  - {key: verbose, section: colors}
  yaml: {key: colors.verbose}
COLOR_WARN:
  default: bright purple
  description: Defines the color to use when emitting warning messages
  env: [{name: ANSIBLE_COLOR_WARN}]
  ini:
  - {key: warn, section: colors}
  yaml: {key: colors.warn}
COMMAND_WARNINGS:
  default: True
  description: 'TODO: write it'
  env: [{name: ANSIBLE_COMMAND_WARNINGS}]
  ini:
  - {key: command_warnings, section: defaults}
  type: boolean
  yaml: {key: defaults.command_warnings}
DEFAULT_ACTION_PLUGIN_PATH:
  default: ~/.ansible/plugins/action:/usr/share/ansible/plugins/action
  description: Colon separated paths in which Ansible will search for Action Plugins.
  env: [{name: ANSIBLE_ACTION_PLUGINS}]
  ini:
  - {key: action_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.action_plugins}
DEFAULT_ALLOW_UNSAFE_LOOKUPS:
  default: False
  description: 'TODO: write it'
  env: []
  ini:
  - {key: allow_unsafe_lookups, section: defaults}
  type: boolean
  yaml: {key: defaults.allow_unsafe_lookups}
DEFAULT_ASK_PASS:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_ASK_PASS}]
  ini:
  - {key: ask_pass, section: defaults}
  type: boolean
  yaml: {key: defaults.ask_pass}
DEFAULT_ASK_SUDO_PASS:
  default: False
  deprecated:
    why: In favor of become which is a generic framework
    version: "2.8"
    alternatives: become
  description: 'TODO: write it'
  env: [{name: ANSIBLE_ASK_SUDO_PASS}]
  ini:
  - {key: ask_sudo_pass, section: defaults}
  type: boolean
DEFAULT_ASK_SU_PASS:
  default: False
  deprecated:
    why: In favor of become which is a generic framework
    version: "2.8"
    alternatives: become
  description: 'TODO: write it'
  env: [{name: ANSIBLE_ASK_SU_PASS}]
  ini:
  - {key: ask_su_pass, section: defaults}
  type: boolean
DEFAULT_ASK_VAULT_PASS:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_ASK_VAULT_PASS}]
  ini:
  - {key: ask_vault_pass, section: defaults}
  type: boolean
  yaml: {key: defaults.ask_vault_pass}
DEFAULT_BECOME:
  default: False
  description: Toggles the use of privilege escalation, allowing you to 'become' another user after login.
  env: [{name: ANSIBLE_BECOME}]
  ini:
  - {key: become, section: privilege_escalation}
  type: boolean
  yaml: {key: privilege_escalation.become}
DEFAULT_BECOME_ASK_PASS:
  default: False
  description: Toggle to prompt for privilege escalation password.
  env: [{name: ANSIBLE_BECOME_ASK_PASS}]
  ini:
  - {key: become_ask_pass, section: privilege_escalation}
  type: boolean
  yaml: {key: privilege_escalation.become_ask_pass}
DEFAULT_BECOME_METHOD:
  default: 'sudo'
  description: Privilege escalation method to use when `become` is enabled.
  env: [{name: ANSIBLE_BECOME_METHOD}]
  ini:
    - {section: privilege_escalation, key: become_method}
  yaml: {key: privilege_escalation.become_method}
DEFAULT_BECOME_EXE:
  default: ~
  description: 'executable to use for privilege escalation, otherwise Ansible will depend on PATh'
  env: [{name: ANSIBLE_BECOME_EXE}]
  ini:
  - {key: become_exe, section: privilege_escalation}
  yaml: {key: privilege_escalation.become_exe}
DEFAULT_BECOME_FLAGS:
  default: ~
  description: Flags to pass to the privilege escalation executable.
  env: [{name: ANSIBLE_BECOME_FLAGS}]
  ini:
  - {key: become_flags, section: privilege_escalation}
  yaml: {key: privilege_escalation.become_flags}
DEFAULT_BECOME_USER:
  default: root
  description: User your become when using privilege escalation, most systems will use 'root' when no user is specified.
  env: [{name: ANSIBLE_BECOME_USER}]
  ini:
  - {key: become_user, section: privilege_escalation}
  yaml: {key: privilege_escalation.become_user}
DEFAULT_CACHE_PLUGIN_PATH:
  default: ~/.ansible/plugins/cache:/usr/share/ansible/plugins/cache
  description: 'TODO: write it'
  env: [{name: ANSIBLE_CACHE_PLUGINS}]
  ini:
  - {key: cache_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.cache_plugins}
DEFAULT_CALLABLE_WHITELIST:
  default: []
  description: 'TODO: write it'
  env: [{name: ANSIBLE_CALLABLE_WHITELIST}]
  ini:
  - {key: callable_whitelist, section: defaults}
  type: list
  yaml: {key: defaults.callable_whitelist}
DEFAULT_CALLBACK_PLUGIN_PATH:
  default: ~/.ansible/plugins/callback:/usr/share/ansible/plugins/callback
  description: 'TODO: write it'
  env: [{name: ANSIBLE_CALLBACK_PLUGINS}]
  ini:
  - {key: callback_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.callback_plugins}
DEFAULT_CALLBACK_WHITELIST:
  default: []
  description: 'TODO: write it'
  env: [{name: ANSIBLE_CALLBACK_WHITELIST}]
  ini:
  - {key: callback_whitelist, section: defaults}
  type: list
  yaml: {key: defaults.callback_whitelist}
DEFAULT_CONNECTION_PLUGIN_PATH:
  default: ~/.ansible/plugins/connection:/usr/share/ansible/plugins/connection
  description: 'TODO: write it'
  env: [{name: ANSIBLE_CONNECTION_PLUGINS}]
  ini:
  - {key: connection_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.connection_plugins}
DEFAULT_DEBUG:
  default: False
  description: Toggles debug output in Ansible, VERY verbose and can hinder multiprocessing.
  env: [{name: ANSIBLE_DEBUG}]
  ini:
  - {key: debug, section: defaults}
  type: boolean
  yaml: {key: defaults.debug}
DEFAULT_EXECUTABLE:
  default: /bin/sh
  description: 'TODO: write it'
  env: [{name: ANSIBLE_EXECUTABLE}]
  ini:
  - {key: executable, section: defaults}
  yaml: {key: defaults.executable}
DEFAULT_FACT_PATH:
  default:
  description: 'TODO: write it'
  env: [{name: ANSIBLE_FACT_PATH}]
  ini:
  - {key: fact_path, section: defaults}
  type: path
  yaml: {key: defaults.fact_path}
DEFAULT_FILTER_PLUGIN_PATH:
  default: ~/.ansible/plugins/filter:/usr/share/ansible/plugins/filter
  description: 'TODO: write it'
  env: [{name: ANSIBLE_FILTER_PLUGINS}]
  ini:
  - {key: filter_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.filter_plugins}
DEFAULT_FORCE_HANDLERS:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_FORCE_HANDLERS}]
  ini:
  - {key: force_handlers, section: defaults}
  type: boolean
  yaml: {key: defaults.force_handlers}
DEFAULT_FORKS:
  default: 5
  description: Maximum number of forks Ansible will use to execute tasks on target hosts.
  env: [{name: ANSIBLE_FORKS}]
  ini:
  - {key: forks, section: defaults}
  type: integer
  yaml: {key: defaults.forks}
DEFAULT_GATHERING:
    default: 'implicit'
    description: 'TODO: write it'
    env: [{name: ANSIBLE_GATHERING}]
    ini:
      - key: gathering
        section: defaults
    yaml: {key: defaults.gathering}
DEFAULT_GATHER_SUBSET:
    default: 'all'
    description: 'TODO: write it'
    env: [{name: ANSIBLE_GATHER_SUBSET}]
    ini:
      - key: gather_subset
        section: defaults
    yaml: {key: defaults.gather_subset}
DEFAULT_GATHER_TIMEOUT:
  default: 10
  description: 'TODO: write it'
  env: [{name: ANSIBLE_GATHER_TIMEOUT}]
  ini:
  - {key: gather_timeout, section: defaults}
  type: integer
  yaml: {key: defaults.gather_timeout}
DEFAULT_HANDLER_INCLUDES_STATIC:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_HANDLER_INCLUDES_STATIC}]
  ini:
  - {key: handler_includes_static, section: defaults}
  type: boolean
  yaml: {key: defaults.handler_includes_static}
  deprecated:
    why: include itself is deprecated and this setting will not matter in the future
    version: "2.8"
    alternatives: none as its already built into the decision between include_tasks and import_tasks
DEFAULT_HASH_BEHAVIOUR:
  default: replace
  description: 'TODO: write it'
  env: [{name: ANSIBLE_HASH_BEHAVIOUR}]
  ini:
  - {key: hash_behaviour, section: defaults}
  yaml: {key: defaults.hash_behaviour}
DEFAULT_HOST_LIST:
  default: /etc/ansible/hosts
  description: Location of the Ansible inventory source.
  env: [{name: ANSIBLE_INVENTORY}]
  expand_relative_paths: True
  ini:
  - {key: inventory, section: defaults}
  type: path
  yaml: {key: defaults.inventory}
DEFAULT_INTERNAL_POLL_INTERVAL:
  default: 0.001
  description: 'TODO: write it'
  env: []
  ini:
  - {key: internal_poll_interval, section: defaults}
  type: float
  yaml: {key: defaults.internal_poll_interval}
DEFAULT_INVENTORY_PLUGIN_PATH:
  default: ~/.ansible/plugins/inventory:/usr/share/ansible/plugins/inventory
  description: 'TODO: write it'
  env: [{name: ANSIBLE_INVENTORY_PLUGINS}]
  ini:
  - {key: inventory_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.inventory_plugins}
DEFAULT_JINJA2_EXTENSIONS:
  default:
  description: 'TODO: write it'
  env: [{name: ANSIBLE_JINJA2_EXTENSIONS}]
  ini:
  - {key: jinja2_extensions, section: defaults}
  yaml: {key: defaults.jinja2_extensions}
DEFAULT_KEEP_REMOTE_FILES:
  default: False
  description: Enables/disables the cleaning up of the temporary files Ansible used to execute the tasks on the remote.
  env: [{name: ANSIBLE_KEEP_REMOTE_FILES}]
  ini:
  - {key: keep_remote_files, section: defaults}
  type: boolean
  yaml: {key: defaults.keep_remote_files}
DEFAULT_LIBVIRT_LXC_NOSECLABEL:
  default: False
  description: 'TODO: write it'
  env: [{name: LIBVIRT_LXC_NOSECLABEL}]
  ini:
  - {key: libvirt_lxc_noseclabel, section: selinux}
  type: boolean
  yaml: {key: selinux.libvirt_lxc_noseclabel}
DEFAULT_LOAD_CALLBACK_PLUGINS:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_LOAD_CALLBACK_PLUGINS}]
  ini:
  - {key: bin_ansible_callbacks, section: defaults}
  type: boolean
  yaml: {key: defaults.bin_ansible_callbacks}
DEFAULT_LOCAL_TMP:
  default: ~/.ansible/tmp
  description: Temporary directory for Ansible to use on the controller.
  env: [{name: ANSIBLE_LOCAL_TEMP}]
  ini:
  - {key: local_tmp, section: defaults}
  type: tmppath
  yaml: {key: defaults.local_tmp}
DEFAULT_LOG_PATH:
  default: ''
  description: File to which Ansible will log on the controller. When empty logging is disabled.
  env: [{name: ANSIBLE_LOG_PATH}]
  ini:
  - {key: log_path, section: defaults}
  type: path
  yaml: {key: defaults.log_path}
DEFAULT_LOOKUP_PLUGIN_PATH:
  default: ~/.ansible/plugins/lookup:/usr/share/ansible/plugins/lookup
  description: 'TODO: write it'
  env: [{name: ANSIBLE_LOOKUP_PLUGINS}]
  ini:
  - {key: lookup_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.lookup_plugins}
DEFAULT_MANAGED_STR:
  default: Ansible managed
  description: Sets the macro for the 'ansible_managed' variable available for 'tempalte' tasks.
  env: []
  ini:
  - {key: ansible_managed, section: defaults}
  yaml: {key: defaults.ansible_managed}
DEFAULT_MODULE_ARGS:
  default: ''
  description: 'TODO: write it'
  env: [{name: ANSIBLE_MODULE_ARGS}]
  ini:
  - {key: module_args, section: defaults}
  yaml: {key: defaults.module_args}
DEFAULT_MODULE_COMPRESSION:
  default: ZIP_DEFLATED
  description: 'TODO: write it'
  env: []
  ini:
  - {key: module_compression, section: defaults}
  yaml: {key: defaults.module_compression}
DEFAULT_MODULE_LANG:
  # TODO: allow setting to function: os.getenv('LANG', 'en_US.UTF-8')
  default: eval(os.getenv('LANG', 'en_US.UTF-8'))
  description: "Language locale setting to use for modules when they execute on the target, if empty it defaults to 'en_US.UTF-8'"
  env: [{name: ANSIBLE_MODULE_LANG}]
  ini:
  - {key: module_lang, section: defaults}
  yaml: {key: defaults.module_lang}
DEFAULT_MODULE_NAME:
  default: command
  description: Module to use with the `ansible` AdHoc command, if none is specified.
  env: []
  ini:
  - {key: module_name, section: defaults}
  yaml: {key: defaults.module_name}
DEFAULT_MODULE_PATH:
  default: ~/.ansible/plugins/modules:/usr/share/ansible/plugins/modules
  description: 'TODO: write it'
  env: [{name: ANSIBLE_LIBRARY}]
  ini:
  - {key: library, section: defaults}
  type: pathlist
  yaml: {key: defaults.library}
DEFAULT_MODULE_SET_LOCALE:
  default: False
  description: Controls if we set locale for modules when executing on the target.
  env: [{name: ANSIBLE_MODULE_SET_LOCALE}]
  ini:
  - {key: module_set_locale, section: defaults}
  type: boolean
  yaml: {key: defaults.module_set_locale}
DEFAULT_MODULE_UTILS_PATH:
  default: ~/.ansible/plugins/module_utils:/usr/share/ansible/plugins/module_utils
  description: 'TODO: write it'
  env: [{name: ANSIBLE_MODULE_UTILS}]
  ini:
  - {key: module_utils, section: defaults}
  type: pathlist
  yaml: {key: defaults.module_utils}
DEFAULT_NO_LOG:
  default: False
  description: Toggle Ansible's display and logging of task details, mainly used to avoid security disclosures.
  env: [{name: ANSIBLE_NO_LOG}]
  ini:
  - {key: no_log, section: defaults}
  type: boolean
  yaml: {key: defaults.no_log}
DEFAULT_NO_TARGET_SYSLOG:
  default: False
  description: Toggle Ansbile logging to syslog on the target when it executes tasks.
  env: [{name: ANSIBLE_NO_TARGET_SYSLOG}]
  ini:
  - {key: no_target_syslog, section: defaults}
  type: boolean
  yaml: {key: defaults.no_target_syslog}
DEFAULT_NULL_REPRESENTATION:
  default:
  description: 'TODO: write it'
  env: [{name: ANSIBLE_NULL_REPRESENTATION}]
  ini:
  - {key: null_representation, section: defaults}
  type: none
  yaml: {key: defaults.null_representation}
DEFAULT_POLL_INTERVAL:
  default: 15
  description: 'TODO: write it'
  env: [{name: ANSIBLE_POLL_INTERVAL}]
  ini:
  - {key: poll_interval, section: defaults}
  type: integer
  yaml: {key: defaults.poll_interval}
DEFAULT_PRIVATE_KEY_FILE:
  default:
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PRIVATE_KEY_FILE}]
  ini:
  - {key: private_key_file, section: defaults}
  type: path
  yaml: {key: defaults.private_key_file}
DEFAULT_PRIVATE_ROLE_VARS:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PRIVATE_ROLE_VARS}]
  ini:
  - {key: private_role_vars, section: defaults}
  type: boolean
  yaml: {key: defaults.private_role_vars}
DEFAULT_REMOTE_PORT:
  default:
  description: Port to use in remote connections, when blank it will use the connection plugin default.
  env: [{name: ANSIBLE_REMOTE_PORT}]
  ini:
  - {key: remote_port, section: defaults}
  type: integer
  yaml: {key: defaults.remote_port}
DEFAULT_REMOTE_TMP:
  default: ~/.ansible/tmp
  description:
    - Temporary directory to use on targets when executing tasks.
    - In some cases Ansible may still choose to use a system temporary dir to avoid permission issues.
  env: [{name: ANSIBLE_REMOTE_TEMP}]
  ini:
  - {key: remote_tmp, section: defaults}
  vars:
    - name: ansible_remote_tmp
  yaml: {key: defaults.remote_tmp}
DEFAULT_REMOTE_USER:
  default:
  description:
    - Sets the login user for the target machines
    - When blank it uses the connection plugin's default, normally the user currently executing Ansible.
  env: [{name: ANSIBLE_REMOTE_USER}]
  ini:
  - {key: remote_user, section: defaults}
  yaml: {key: defaults.remote_user}
DEFAULT_ROLES_PATH:
  default: ~/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles
  description: 'TODO: write it'
  env: [{name: ANSIBLE_ROLES_PATH}]
  expand_relative_paths: True
  ini:
  - {key: roles_path, section: defaults}
  type: pathlist
  yaml: {key: defaults.roles_path}
DEFAULT_SCP_IF_SSH:
  default: smart
  description:
    - "Prefered method to use when transfering files over ssh"
    - When set to smart, Ansible will try them until one succeeds or they all fail
    - If set to True, it will force 'scp', if False it will use 'sftp'
  env: [{name: ANSIBLE_SCP_IF_SSH}]
  ini:
  - {key: scp_if_ssh, section: ssh_connection}
  yaml: {key: ssh_connection.scp_if_ssh}
DEFAULT_SELINUX_SPECIAL_FS:
  default: fuse, nfs, vboxsf, ramfs, 9p
  description:
    - "Some filesystems do not support safe operations and/or return inconsistent errors,
       this setting makes Ansible 'tolerate' those in the list w/o causing fatal errors."
    - Data corruption may occur and writes are not always verified when a filesystem is in the list.

  env: []
  ini:
  - {key: special_context_filesystems, section: selinux}
  type: list
  yaml: {key: selinux.special_context_filesystems}
DEFAULT_SFTP_BATCH_MODE:
  default: True
  description: 'TODO: write it'
  env: [{name: ANSIBLE_SFTP_BATCH_MODE}]
  ini:
  - {key: sftp_batch_mode, section: ssh_connection}
  type: boolean
  yaml: {key: ssh_connection.sftp_batch_mode}
DEFAULT_SQUASH_ACTIONS:
  default: apk, apt, dnf, homebrew, openbsd_pkg, pacman, pkgng, yum, zypper
  description:
    - Ansible can optimise actions that call modules that support list parameters when using with_ looping.
      Instead of calling the module once for each item, the module is called once with the full list.
    - The default value for this setting is only for certain package managers, but it can be used for any module
    - Currently, this is only supported for modules that have a name or pkg parameter, and only when the item is the only thing being passed to the parameter.
  env: [{name: ANSIBLE_SQUASH_ACTIONS}]
  ini:
  - {key: squash_actions, section: defaults}
  type: list
  yaml: {key: defaults.squash_actions}
  version_added: "2.0"
DEFAULT_SSH_TRANSFER_METHOD:
  default:
  description: 'unused?'
  #  - "Prefered method to use when transfering files over ssh"
  #  - Setting to smart will try them until one succeeds or they all fail
  #choices: ['sftp', 'scp', 'dd', 'smart']
  env: [{name: ANSIBLE_SSH_TRANSFER_METHOD}]
  ini:
  - {key: transfer_method, section: ssh_connection}
  yaml: {key: ssh_connection.transfer_method}
DEFAULT_STDOUT_CALLBACK:
  default: default
  description:
    - "Set the main callback used to display Ansible output, you can only have one at a time."
    - You can have many other callbacks, but just one can be in charge of stdout.
  env: [{name: ANSIBLE_STDOUT_CALLBACK}]
  ini:
  - {key: stdout_callback, section: defaults}
  yaml: {key: defaults.stdout_callback}
DEFAULT_STRATEGY:
  default: 'linear'
  description: Set the default strategy used for plays.
  env: [{name: ANSIBLE_STRATEGY}]
  ini:
  - {key: strategy, section: defaults}
  yaml: {key: defaults.strategy}
  version_added: "2.3"
DEFAULT_STRATEGY_PLUGIN_PATH:
  default: ~/.ansible/plugins/strategy:/usr/share/ansible/plugins/strategy
  description: 'TODO: write it'
  env: [{name: ANSIBLE_STRATEGY_PLUGINS}]
  ini:
  - {key: strategy_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.strategy_plugins}
DEFAULT_SU:
  default: False
  description: 'Toggle the use of "su" for tasks.'
  env: [{name: ANSIBLE_SU}]
  ini:
  - {key: su, section: defaults}
  type: boolean
  yaml: {key: defaults.su}
DEFAULT_SUDO:
  default: False
  deprecated:
    why: In favor of become which is a generic framework
    version: "2.8"
    alternatives: become
  description: 'Toggle the use of "sudo" for tasks.'
  env: [{name: ANSIBLE_SUDO}]
  ini:
  - {key: sudo, section: defaults}
  type: boolean
DEFAULT_SUDO_EXE:
  default: sudo
  deprecated:
    why: In favor of become which is a generic framework
    version: "2.8"
    alternatives: become
  description: 'specify an "sudo" executable, otherwise it relies on PATH.'
  env: [{name: ANSIBLE_SUDO_EXE}]
  ini:
  - {key: sudo_exe, section: defaults}
DEFAULT_SUDO_FLAGS:
  default: '-H -S -n'
  deprecated:
    why: In favor of become which is a generic framework
    version: "2.8"
    alternatives: become
  description: 'Flags to pass to "sudo"'
  env: [{name: ANSIBLE_SUDO_FLAGS}]
  ini:
  - {key: sudo_flags, section: defaults}
DEFAULT_SUDO_USER:
  default:
  deprecated:
    why: In favor of become which is a generic framework
    version: "2.8"
    alternatives: become
  description: 'User you become when using "sudo", leaving it blank will use the default configured on the target (normally root)'
  env: [{name: ANSIBLE_SUDO_USER}]
  ini:
  - {key: sudo_user, section: defaults}
DEFAULT_SU_EXE:
  default: su
  deprecated:
    why: In favor of become which is a generic framework
    version: "2.8"
    alternatives: become
  description: 'specify an "su" executable, otherwise it relies on PATH.'
  env: [{name: ANSIBLE_SU_EXE}]
  ini:
  - {key: su_exe, section: defaults}
DEFAULT_SU_FLAGS:
  default: ~
  deprecated:
    why: In favor of become which is a generic framework
    version: "2.8"
    alternatives: become
  description: 'Flags to pass to su'
  env: [{name: ANSIBLE_SU_FLAGS}]
  ini:
  - {key: su_flags, section: defaults}
DEFAULT_SU_USER:
  default:
  description: 'User you become when using "su", leaving it blank will use the default configured on the target (normally root)'
  env: [{name: ANSIBLE_SU_USER}]
  ini:
  - {key: su_user, section: defaults}
  deprecated:
    why: In favor of become which is a generic framework
    version: "2.8"
    alternatives: become
DEFAULT_SYSLOG_FACILITY:
  default: LOG_USER
  description: 'TODO: write it'
  env: [{name: ANSIBLE_SYSLOG_FACILITY}]
  ini:
  - {key: syslog_facility, section: defaults}
  yaml: {key: defaults.syslog_facility}
DEFAULT_TASK_INCLUDES_STATIC:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_TASK_INCLUDES_STATIC}]
  ini:
  - {key: task_includes_static, section: defaults}
  type: boolean
  yaml: {key: defaults.task_includes_static}
  deprecated:
    why: include itself is deprecated and this setting will not matter in the future
    version: "2.8"
    alternatives: None, as its already built into the decision between include_tasks and import_tasks
DEFAULT_TEST_PLUGIN_PATH:
  default: ~/.ansible/plugins/test:/usr/share/ansible/plugins/test
  description: 'TODO: write it'
  env: [{name: ANSIBLE_TEST_PLUGINS}]
  ini:
  - {key: test_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.test_plugins}
DEFAULT_TIMEOUT:
  default: 10
  description: 'TODO: write it'
  env: [{name: ANSIBLE_TIMEOUT}]
  ini:
  - {key: timeout, section: defaults}
  type: integer
  yaml: {key: defaults.timeout}
DEFAULT_TRANSPORT:
  default: smart
  description: "Default connection plugin to use, the 'smart' option will toggle between 'ssh' and 'paramiko' depending on controller OS and ssh versions"
  env: [{name: ANSIBLE_TRANSPORT}]
  ini:
  - {key: transport, section: defaults}
  yaml: {key: defaults.transport}
DEFAULT_UNDEFINED_VAR_BEHAVIOR:
  default: True
  description: 'TODO: write it'
  env: [{name: ANSIBLE_ERROR_ON_UNDEFINED_VARS}]
  ini:
  - {key: error_on_undefined_vars, section: defaults}
  type: boolean
  yaml: {key: defaults.error_on_undefined_vars}
DEFAULT_VARS_PLUGIN_PATH:
  default: ~/.ansible/plugins/vars:/usr/share/ansible/plugins/vars
  description: 'TODO: write it'
  env: [{name: ANSIBLE_VARS_PLUGINS}]
  ini:
  - {key: vars_plugins, section: defaults}
  type: pathlist
  yaml: {key: defaults.vars_plugins}
DEFAULT_VAR_COMPRESSION_LEVEL:
  default: 0
  description: 'TODO: write it'
  env: [{name: ANSIBLE_VAR_COMPRESSION_LEVEL}]
  ini:
  - {key: var_compression_level, section: defaults}
  type: integer
  yaml: {key: defaults.var_compression_level}
DEFAULT_VAULT_ID_MATCH:
  default: False
  desc: 'If true, decrypting vaults with a vault id will only try the password from the matching vault-id'
  env: [{name: ANSIBLE_VAULT_ID_MATCH}]
  ini:
  - {key: vault_id_match, section: defaults}
  vars: []
  yaml: {key: defaults.vault_id_match}
DEFAULT_VAULT_IDENTITY:
  default: default
  desc: 'TODO: write it'
  env: [{name: ANSIBLE_VAULT_IDENTITY}]
  ini:
  - {key: vault_identity, section: defaults}
  vars: []
  yaml: {key: defaults.vault_identity}
DEFAULT_VAULT_IDENTITY_LIST:
  default: []
  desc: 'A list of vault-ids to use by default. Equivalent to multiple --vault-id args. Vault-ids are tried in order.'
  env: [{name: ANSIBLE_VAULT_IDENTITY_LIST}]
  ini:
  - {key: vault_identity_list, section: defaults}
  value_type: list
  vars: []
  yaml: {key: defaults.vault_identity_list}
DEFAULT_VAULT_PASSWORD_FILE:
  default: ~
  description: 'TODO: write it'
  env: [{name: ANSIBLE_VAULT_PASSWORD_FILE}]
  ini:
  - {key: vault_password_file, section: defaults}
  type: path
  yaml: {key: defaults.vault_password_file}
DEFAULT_VERBOSITY:
  default: 0
  description: 'TODO: write it'
  env: [{name: ANSIBLE_VERBOSITY}]
  ini:
  - {key: verbosity, section: defaults}
  type: integer
  yaml: {key: defaults.verbosity}
DEPRECATION_WARNINGS:
  default: True
  description: "Toggle to control the showing of deprecation warnings"
  env: [{name: ANSIBLE_DEPRECATION_WARNINGS}]
  ini:
  - {key: deprecation_warnings, section: defaults}
  type: boolean
  yaml: {key: defaults.deprecation_warnings}
DIFF_ALWAYS:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_DIFF_ALWAYS}]
  ini:
  - {key: always, section: diff}
  type: bool
  yaml: {key: diff.always}
DIFF_CONTEXT:
  default: 3
  description: 'TODO: write it'
  env: [{name: ANSIBLE_DIFF_CONTEXT}]
  ini:
  - {key: context, section: diff}
  type: integer
  yaml: {key: diff.context}
DISPLAY_ARGS_TO_STDOUT:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_DISPLAY_ARGS_TO_STDOUT}]
  ini:
  - {key: display_args_to_stdout, section: defaults}
  type: boolean
  yaml: {key: defaults.display_args_to_stdout}
DISPLAY_SKIPPED_HOSTS:
  default: True
  description: "Toggle to control displaying skipped host entries in a task in the default callback"
  env: [{name: DISPLAY_SKIPPED_HOSTS}]
  ini:
  - {key: display_skipped_hosts, section: defaults}
  type: boolean
  yaml: {key: defaults.display_skipped_hosts}
ERROR_ON_MISSING_HANDLER:
  default: True
  description: "Toggle to allow missing handlers to become a warning instead of an error when notifying."
  env: [{name: ANSIBLE_ERROR_ON_MISSING_HANDLER}]
  ini:
  - {key: error_on_missing_handler, section: defaults}
  type: boolean
  yaml: {key: defaults.error_on_missing_handler}
GALAXY_IGNORE_CERTS:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_GALAXY_IGNORE}]
  ini:
  - {key: ignore_certs, section: galaxy}
  type: boolean
  yaml: {key: galaxy.ignore_certs}
GALAXY_ROLE_SKELETON:
  default:
  description: 'TODO: write it'
  env: [{name: ANSIBLE_GALAXY_ROLE_SKELETON}]
  ini:
  - {key: role_skeleton, section: galaxy}
  type: path
  yaml: {key: galaxy.role_skeleton}
GALAXY_ROLE_SKELETON_IGNORE:
  default: [^.git$, ^.*/.git_keep$]
  description: 'TODO: write it'
  env: [{name: ANSIBLE_GALAXY_ROLE_SKELETON_IGNORE}]
  ini:
  - {key: role_skeleton_ignore, section: galaxy}
  type: list
  yaml: {key: galaxy.role_skeleton_ignore}
GALAXY_SCMS:
  default: git, hg
  description: 'TODO: write it'
  env: [{name: ANSIBLE_GALAXY_SCMS}]
  ini:
  - {key: scms, section: galaxy}
  type: list
  yaml: {key: galaxy.scms}
GALAXY_SERVER:
  default: https://galaxy.ansible.com
  description: "URL to prepend when roles don't specify the full URI, assume they are referencing this server as the source."
  env: [{name: ANSIBLE_GALAXY_SERVER}]
  ini:
  - {key: server, section: galaxy}
  yaml: {key: galaxy.server}
HOST_KEY_CHECKING:
  default: True
  description: 'Set this to "False" if you want to avoid host key checking by the underlying tools Ansible uses to connect to the host'
  env: [{name: ANSIBLE_HOST_KEY_CHECKING}]
  ini:
  - {key: host_key_checking, section: defaults}
  type: boolean
  yaml: {key: defaults.host_key_checking}
INVENTORY_ENABLED:
  default: [host_list, script, yaml, ini]
  description: List of enabled inventory plugins, it also determines the order in which they are used.
  env: [{name: ANSIBLE_INVENTORY_ENABLED}]
  ini:
  - {key: inventory_enabled, section: defaults}
  type: list
  yaml: {key: inventory.enabled_plugins}
INVENTORY_IGNORE_EXTS:
  default: eval(BLACKLIST_EXTS + ( '~', '.orig', '.ini', '.cfg', '.retry'))
  description: List of extensions to ignore when using a directory as an inventory source
  env: [{name: ANSIBLE_INVENTORY_IGNORE}]
  ini:
  - {key: inventory_ignore_extensions, section: defaults}
  type: list
  yaml: {key: inventory.ignore_extensions}
INVENTORY_IGNORE_PATTERNS:
  default: []
  description: List of patterns to ignore when using a directory as an inventory source
  env: [{name: ANSIBLE_INVENTORY_IGNORE_REGEX}]
  ini:
  - {key: inventory_ignore_patterns, section: defaults}
  type: list
  yaml: {key: inventory.ignore_patterns}
MAX_FILE_SIZE_FOR_DIFF:
  default: 104448
  description: Maximum size of files to be considered for diff display
  env: [{name: ANSIBLE_MAX_DIFF_SIZE}]
  ini:
  - {key: max_diff_size, section: defaults}
  type: integer
  yaml: {key: defaults.max_diff_size}
MERGE_MULTIPLE_CLI_TAGS:
  default: True
  description: 'TODO: write it'
  env: [{name: ANSIBLE_MERGE_MULTIPLE_CLI_TAGS}]
  ini:
    - {key: merge_multiple_cli_tags, section: defaults}
  type: boolean
  yaml: {key: defaults.merge_multiple_cli_tags}
NETWORK_GROUP_MODULES:
  default: [eos, nxos, ios, iosxr, junos, ce, vyos, sros, dellos9, dellos10, dellos6, asa, aruba, aireos]
  description: 'TODO: write it'
  env: [{name: NETWORK_GROUP_MODULES}]
  ini:
  - {key: network_group_modules, section: defaults}
  type: list
  yaml: {key: defaults.network_group_modules}
ONLY_NAMESPACE_FACTS:
  default: False
  description:
    - Facts normally get injected as top level variables, this setting prevents that.
    - Facts are still available in the `ansible_facts` variable w/o the `ansible_` prefix.
  env: [{name: ANSIBLE_RESTRICT_FACTS}]
  ini:
  - {key: restrict_facts_namespace, section: defaults}
  type: boolean
  yaml: {key: defaults.restrict_facts_namespace}
  version_added: "2.4"
PARAMIKO_HOST_KEY_AUTO_ADD:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PARAMIKO_HOST_KEY_AUTO_ADD}]
  ini:
  - {key: host_key_auto_add, section: paramiko_connection}
  type: boolean
  yaml: {key: paramiko_connection.host_key_auto_add}
PARAMIKO_LOOK_FOR_KEYS:
  default: True
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PARAMIKO_LOOK_FOR_KEYS}]
  ini:
  - {key: look_for_keys, section: paramiko_connection}
  type: boolean
  yaml: {key: paramiko_connection.look_for_keys}
PARAMIKO_PROXY_COMMAND:
  default:
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PARAMIKO_PROXY_COMMAND}]
  ini:
  - {key: proxy_command, section: paramiko_connection}
  yaml: {key: paramiko_connection.proxy_command}
PARAMIKO_PTY:
  default: True
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PARAMIKO_PTY}]
  ini:
  - {key: pty, section: paramiko_connection}
  type: boolean
  yaml: {key: paramiko_connection.pty}
PARAMIKO_RECORD_HOST_KEYS:
  default: True
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PARAMIKO_RECORD_HOST_KEYS}]
  ini:
  - {key: record_host_keys, section: paramiko_connection}
  type: boolean
  yaml: {key: paramiko_connection.record_host_keys}
PERSISTENT_CONNECT_INTERVAL:
  default: 1
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PERSISTENT_CONNECT_INTERVAL}]
  ini:
  - {key: connect_interval, section: persistent_connection}
  type: integer
  yaml: {key: persistent_connection.connect_interval}
PERSISTENT_CONTROL_PATH_DIR:
  default: ~/.ansible/pc
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PERSISTENT_CONTROL_PATH_DIR}]
  ini:
  - {key: control_path_dir, section: persistent_connection}
  yaml: {key: persistent_connection.control_path_dir}
PERSISTENT_CONNECT_RETRIES:
  default: 30
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PERSISTENT_CONNECT_RETRIES}]
  ini:
  - {key: connect_retries, section: persistent_connection}
  type: integer
  yaml: {key: persistent_connection.connect_retries}
PERSISTENT_CONNECT_TIMEOUT:
  default: 30
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PERSISTENT_CONNECT_TIMEOUT}]
  ini:
  - {key: connect_timeout, section: persistent_connection}
  type: integer
  yaml: {key: persistent_connection.connect_timeout}
PERSISTENT_CONNECT_RETRY_TIMEOUT:
  default: 15
  desc: 'TODO: write it'
  env: [{name: ANSIBLE_PERSISTENT_CONNECT_RETRY_TIMEOUT}]
  ini:
  - {key: connect_retry_timeout, section: persistent_connection}
  value_type: integer
  vars: []
  yaml: {key: persistent_connection.connect_retry_timeout}
PERSISTENT_COMMAND_TIMEOUT:
  default: 10
  desc: 'TODO: write it'
  env: [{name: ANSIBLE_PERSISTENT_COMMAND_TIMEOUT}]
  ini:
  - {key: command_timeout, section: persistent_connection}
  value_type: integer
  vars: []
  yaml: {key: persistent_connection.command_timeout}
RETRY_FILES_ENABLED:
  default: True
  description: This controls whether a failed Ansible playbook should create a .retry file.
  env: [{name: ANSIBLE_RETRY_FILES_ENABLED}]
  ini:
  - {key: retry_files_enabled, section: defaults}
  type: boolean
  yaml: {key: errors.retry.enabled}
RETRY_FILES_SAVE_PATH:
  default: ~
  description: This sets the path in which Ansible will save .retry files when a playbook fails and retry files are enabled.
  env: [{name: ANSIBLE_RETRY_FILES_SAVE_PATH}]
  ini:
  - {key: retry_files_save_path, section: defaults}
  type: path
  yaml: {key: errors.retry.path}
SHOW_CUSTOM_STATS:
  default: False
  description: 'This adds the custom stats set via the set_stats plugin to the default output'
  env: [{name: ANSIBLE_SHOW_CUSTOM_STATS}]
  ini:
  - {key: show_custom_stats, section: defaults}
  type: boolean
  yaml: {key: defaults.show_custom_stats}
STRING_TYPE_FILTERS:
  default: [string, to_json, to_nice_json, to_yaml, ppretty, json]
  description:
    - "This list of filters avoids 'type conversion' when templating variables"
    - Useful when you want to avoid conversion into lists or dictionaries for JSON strings, for example.
  env: [{name: ANSIBLE_STRING_TYPE_FILTERS}]
  ini:
  - {key: dont_type_filters, section: jinja2}
  type: list
  yaml: {key: jinja2.dont_type_filters}
SYSTEM_WARNINGS:
  default: True
  description: 'TODO: write it'
  env: [{name: ANSIBLE_SYSTEM_WARNINGS}]
  ini:
  - {key: system_warnings, section: defaults}
  type: boolean
  yaml: {key: defaults.system_warnings}
USE_PERSISTENT_CONNECTIONS:
  default: False
  description: 'TODO: write it'
  env: [{name: ANSIBLE_USE_PERSISTENT_CONNECTIONS}]
  ini:
  - {key: use_persistent_connections, section: defaults}
  type: boolean
  yaml: {key: defaults.use_persistent_connections}
VARIABLE_PRECEDENCE:
  default: [all_inventory, groups_inventory, all_plugins_inventory, all_plugins_play, groups_plugins_inventory, groups_plugins_play]
  description: 'TODO: write it'
  env: [{name: ANSIBLE_PRECEDENCE}]
  ini:
  - {key: precedence, section: defaults}
  type: list
  yaml: {key: defaults.precedence}
YAML_FILENAME_EXTENSIONS:
  default: [".yml", ".yaml", ".json"]
  description:
    - "Check all of these extensions when looking for 'variable' files which should be YAML or JSON or vaulted versions of these."
    - 'This affects vars_files, include_vars, inventory and vars plugins among others.'
  env:
    - name: ANSIBLE_YAML_FILENAME_EXT
  ini:
    - section: yaml_valid_extensions
      key: defaults
  type: list
  yaml: {key: defaults.yaml_valid_extensions}
...
